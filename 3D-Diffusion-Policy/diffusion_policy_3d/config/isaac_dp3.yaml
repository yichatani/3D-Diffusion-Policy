defaults:
  - _self_
  - task: my_task

name: train_dp3
task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "dp3_grasp"

n_obs_steps: 2
n_action_steps: 3
horizon: ${eval:${n_obs_steps} + ${n_action_steps} - 1}
n_latency_steps: 0
dataset_obs_steps: ${n_obs_steps}
keypoint_visible_rate: 1.0
obs_as_global_cond: true

policy:
  _target_: diffusion_policy_3d.policy.ani_dp3.DP3
  use_point_crop: true
  condition_type: film
  use_down_condition: true
  use_mid_condition: true
  use_up_condition: true

  diffusion_step_embed_dim: 128
  down_dims: [512, 1024, 2048]
  crop_shape: [80, 80]
  encoder_output_dim: 64
  horizon: ${horizon}
  kernel_size: 5
  n_action_steps: ${n_action_steps}
  n_groups: 8
  n_obs_steps: ${n_obs_steps}
  phase_latent_dim: 64

  noise_scheduler:
    _target_: diffusers.schedulers.scheduling_ddim.DDIMScheduler
    num_train_timesteps: 100
    beta_start: 0.0001
    beta_end: 0.02
    beta_schedule: squaredcos_cap_v2
    clip_sample: true
    set_alpha_to_one: true
    steps_offset: 0
    prediction_type: sample

  num_inference_steps: 10
  obs_as_global_cond: true
  shape_meta: ${shape_meta}
  use_pc_color: false
  pointnet_type: "pointnet"

  pointcloud_encoder_cfg:
    in_channels: 3
    out_channels: ${policy.encoder_output_dim}
    use_layernorm: true
    final_norm: layernorm
    normal_channel: false

# ----------------------
# EMA 
ema:
  _target_: diffusion_policy_3d.model.diffusion.ema_model.EMAModel
  model: ${policy}
  update_after_step: 0
  inv_gamma: 1.0
  power: 0.75
  min_value: 0.0
  max_value: 0.9999

# ----------------------
# Logging
logging:
  group: ${exp_name}
  project: dp3
  name: phase_latent_${training.seed}
  mode: online
  resume: true
  tags: 
    - dp3
    - diffusion
    - grasping

# ----------------------
# Dataloader
dataloader:
  batch_size: 128
  shuffle: true
  num_workers: 8
  pin_memory: true
  persistent_workers: true

val_dataloader:
  batch_size: 128
  shuffle: false
  num_workers: 8
  pin_memory: true
  persistent_workers: true

# ----------------------
# Optimizer
optimizer:
  _target_: torch.optim.AdamW
  lr: 1.0e-4
  betas: [0.95, 0.999]
  eps: 1.0e-8
  weight_decay: 1.0e-6

# ----------------------
# Training config
training:
  device: "cuda:0"
  seed: 42
  debug: false
  resume: true
  num_epochs: 2000
  gradient_accumulate_every: 1
  use_ema: true
  lr_scheduler: cosine
  lr_warmup_steps: 500
  max_train_steps: null
  max_val_steps: null
  val_every: 5
  rollout_every: 999999
  sample_every: 5
  checkpoint_every: 200
  tqdm_interval_sec: 1.0

# ----------------------
# Checkpoint config
checkpoint:
  save_ckpt: true
  save_last_ckpt: true
  save_last_snapshot: false
  topk:
    k: 1
    monitor_key: train_action_mse_error
    mode: min
    format_str: 'epoch={epoch:04d}-train_mse={train_action_mse_error:.3f}.ckpt'

# ----------------------
# Hydra logging dir
multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
